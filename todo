#!/bin/sh
# vim: ts=4:sw=4

# shellcheck disable=SC2088
# We parse "~/..." within quotes explicitly further down in this script.

# Config
_todo_dir="~/.TODO"       # The directory where TODO files are stored.
_prefix_todo="[ ] "       # The prefix for items to do
_prefix_done="[X] "       # The prefix for items that were done
_show_done_since="5.days" # The limit for items retrieved via git
                          # NOTE: This can be a date, relative date, etc. Check
                          # the git documentation for further information.
_sort="sort"              # The binary to sort the files
_filter_regex="."         # The regex to filter the files to process
                          # NOTE: This is ran on the entire PATH of the files,
                          # not on the filename

# Env
_git="$(command -v git 2>/dev/null)"
_newline="
"

format_todo() {
	sed '/^$/d' | while read -r line; do
		printf '%s%s\n' "$_prefix_todo" "$line"
	done
}

format_done() {
	grep '^-[^-]' | sed 's/^-//' | sed '/^$/d' | while read -r line; do
		printf '%s[9m%s[0m\n' "$_prefix_done" "$line"
	done
}

git_processing() {
	file="$1"
	# Git processing
	# First, the current diff
	$_git -C "$_todo_dir" diff -- "$file" | format_done
	# Second, the history
	$_git -C "$_todo_dir" log --format=format:%H --since="$_show_done_since" \
		2>/dev/null | while read -r hash; do
		$_git -C "$_todo_dir" show "$hash" -- "$file" | format_done
	done
}

snf() { # Sort and filter
	grep "$_filter_regex" | sort
}

# main function
main() {
	_processed_files="$(mktemp)"

	# The following only supports ~/ and not ~user/, on purpose.
	[ "${_todo_dir#\~/}" != "$_todo_dir" ] && _todo_dir="$HOME${_todo_dir#\~}"
	_todo_dir="$(realpath "$_todo_dir")"

	[ -d "$_todo_dir" ] || {
		printf 'Directory %s does not exist. ' "$_todo_dir" >&2;
		printf 'To get rid of this message, create it.\n' >&2;
		exit 1;
	}

	find "$_todo_dir" -name '.git' -prune -false -o -type f ! -size 0c | snf \
		| while read -r file; do
		printf "[37;1m%s[30;m\n" "$(basename -- "$file" \
			| sed 's/^[0-9]\+-//; s/_/ /g')"
		format_todo < "$file"
		echo "$file" >> "$_processed_files"
		if [ -n "$_git" ] && $_git -C "$_todo_dir" rev-parse --show-toplevel \
			>/dev/null 2>&1; then
			git_processing "$file"
		fi
		printf '\n'
	done

	if [ -n "$_git" ] && $_git -C "$_todo_dir" rev-parse --show-toplevel \
		>/dev/null 2>&1; then
		$_git -C "$_todo_dir" log --format=format:%H \
			--since="$_show_done_since" 2>/dev/null | while read -r hash; do
			$_git -C "$_todo_dir" diff --diff-filter=MD --name-only "$hash" \
				| snf | while read -r filename; do
				file="$(realpath "$_todo_dir/$filename")"
				grep -q "$file" "$_processed_files" || {
					printf "[37;1m%s[30;m\n" "$(basename -- "$file" \
					| sed 's/^[0-9]\+-//; s/_/ /g')"
					echo "$file" >> "$_processed_files"
					git_processing "$file"
					printf '\n'
				}
			done
		done
	fi

	rm "$_processed_files"
}

main "$@"
